@page "/download"
@inject HttpClient HttpClient
@inject IJSRuntime JSRuntime

<h1>Download Files</h1>

<p>
    <a href="pictures/1" class="btn btn-primary" download="Space Needle.jpeg">
        <span class="oi oi-cloud-download" aria-hidden="true"></span>
        Try to download a file by simple &lt;a/&gt; tag
    </a>
    <div>
        (👆 It works fine as expected in .NET6, but .NET 5 or earlier will not start a download.)
    </div>
</p>

<p>
    <a href="pictures/1" class="btn btn-primary" target="_top" download="Space Needle.jpeg">
        <span class="oi oi-cloud-download" aria-hidden="true"></span>
        Download a file from by &lt;a/&gt; tag with 'target="_top"'
    </a>
</p>

<p>
    <button class="btn btn-primary" @onclick="OnClickDownloadButton">
        <span class="oi oi-cloud-download" aria-hidden="true"></span>
        Download a file from C# code with JavaScript helper
    </button>
</p>

<p>
    <button class="btn btn-primary" @onclick="OnClickDownloadButtonUsingHiddenAnchorTag">
        <span class="oi oi-cloud-download" aria-hidden="true"></span>
        Download a file from C# code with hidden &lt;a/&gt; tag
    </button>
    <a href="pictures/1" target="_top" download="Space Needle.jpeg" @ref="HiddenAnchorTag" style="display:none;"></a>
</p>

<p>
    <button class="btn btn-primary" @onclick="OnClickDownloadViaHttpClientButton">
        <span class="oi oi-cloud-download" aria-hidden="true"></span>
        Download a file from in-memory byte array inside of Blazor app
    </button>
</p>


@code
{
    private async Task OnClickDownloadButton()
    {
        var res = await JSRuntime.InvokeAsync<bool>("confirm", "Are you sure?");
        if (res == false) return;

        await JSRuntime.InvokeVoidAsync(
            "downloadFromUrl",
            new { Url = "pictures/1", FileName = "Space Needle.jpeg" });
    }

    private ElementReference HiddenAnchorTag;

    private async Task OnClickDownloadButtonUsingHiddenAnchorTag()
    {
        var res = await JSRuntime.InvokeAsync<bool>("confirm", "Are you sure?");
        if (res == false) return;

        await JSRuntime.InvokeVoidAsync("clickElement", HiddenAnchorTag);
    }

    public async Task OnClickDownloadViaHttpClientButton()
    {
        // Please imagine the situation that the downloading files API is protected by
        // token-based authorization (not cookie-based authorization).
        // In that case, the user can not download it from the href link of the anchor tag directly.
        // In this scenario, the application has to get a byte array of the file from
        // the API endpoint by HttpClient with token and make the byte array can be downloadable.

        var bytes = await HttpClient.GetByteArrayAsync("pictures/1");

        await JSRuntime.InvokeVoidAsync(
            "downloadFromByteArray",
            new
            {
                ByteArray = bytes,
                FileName = "Space Needle.jpeg",
                ContentType = "image/jpeg"
            });
    }

}
